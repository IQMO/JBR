# ============================================================================
# Jabbr Trading Bot Platform - Environment Configuration Template
# ============================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit the actual .env file to version control!

# ============================================================================
# APPLICATION SETTINGS
# ============================================================================
NODE_ENV=development
PORT=3001
FRONTEND_URL=http://localhost:3000

# ============================================================================
# JWT AUTHENTICATION
# ============================================================================
# Generate strong secrets (32+ characters recommended)
# You can use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your-super-secure-jwt-secret-here-32-chars-minimum
JWT_REFRESH_SECRET=your-super-secure-refresh-secret-here-32-chars-minimum
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# ============================================================================
# PASSWORD HASHING
# ============================================================================
BCRYPT_ROUNDS=12

# ============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# ============================================================================
DATABASE_URL=postgresql://username:password@localhost:5432/jabbr_trading_bot
DB_HOST=localhost
DB_PORT=5432
DB_NAME=jabbr_trading_bot
DB_USER=postgres
DB_PASSWORD=your_db_password
DB_SSL=false

# ============================================================================
# REDIS CONFIGURATION (for caching and sessions)
# ============================================================================
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# ============================================================================
# EXCHANGE API KEYS (ENCRYPTED STORAGE)
# ============================================================================
# IMPORTANT: These are examples. In production, API keys should be encrypted
# before storing in the database. The application will handle encryption.

# Bybit API Configuration
BYBIT_API_KEY=your_bybit_mainnet_api_key_here
BYBIT_API_SECRET=your_bybit_mainnet_api_secret_here

# Bybit TESTNET API keys (for testing)
BYBIT_TESTNET_API_KEY=your_bybit_testnet_api_key_here
BYBIT_TESTNET_API_SECRET=your_bybit_testnet_api_secret_here
BYBIT_TESTNET=true

# Other Exchange APIs (for future expansion)
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_API_SECRET=your_binance_api_secret_here

OKX_API_KEY=your_okx_api_key_here
OKX_API_SECRET=your_okx_api_secret_here
OKX_PASSPHRASE=your_okx_passphrase_here

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================
LOG_LEVEL=info
LOG_FILE=logs/app.log

# ============================================================================
# RATE LIMITING
# ============================================================================
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ============================================================================
# WEBSOCKET CONFIGURATION
# ============================================================================
WS_PORT=3002
WS_HEARTBEAT_INTERVAL=30000
WS_CONNECTION_TIMEOUT=10000

# ============================================================================
# TIME SYNCHRONIZATION
# ============================================================================
NTP_SERVER=pool.ntp.org
TIME_SYNC_INTERVAL=300000

# ============================================================================
# SECURITY SETTINGS
# ============================================================================
CORS_ORIGIN=http://localhost:3000
SESSION_SECRET=your-session-secret-here
ENCRYPTION_KEY=your-32-character-encryption-key-here

# ============================================================================
# MONITORING & ALERTS
# ============================================================================
HEALTH_CHECK_INTERVAL=60000
ALERT_EMAIL=admin@yourcompany.com
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-email-password

# ============================================================================
# DEVELOPMENT/TESTING
# ============================================================================
ENABLE_API_DOCS=true
ENABLE_DEBUG_LOGS=true
MOCK_EXCHANGE_DATA=false

# ============================================================================
# IMPORTANT SECURITY NOTES
# ============================================================================
# 1. Never commit your .env file to version control
# 2. Use strong, unique secrets for JWT_SECRET and JWT_REFRESH_SECRET
# 3. In production, set BYBIT_TESTNET=false and use mainnet API keys
# 4. Regularly rotate your API keys
# 5. Use environment-specific encryption keys
# 6. Store production secrets in secure cloud services (AWS Secrets Manager, etc.)
